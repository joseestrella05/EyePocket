@page "/Clientes/Edit/{ClienteId:int}"
@inject ClienteServices clienteService
@inject NavigationManager navigation

<PageTitle>Editando Cliente | @clientes.Nombre</PageTitle>
<div class="container mb-4">
    <div class="card">
        <div class="text-left">
            <h2 class="text-black" style="background-color:white; padding:5px;"><i class="bi bi-person-gear m-1"></i> Editar Cliente</h2>
        </div>
    </div>
</div>

<div class="contenedor">
    <div class="card">
        <div class="card-body">
            <div class="section-title">Datos personales</div>
            <EditForm Model="clientes" OnValidSubmit="Guardar">
                <DataAnnotationsValidator />
                <div class="row mb-3">
                    <div class="col">
                        <label><strong>Nombre y Apellido *</strong></label>
                        <InputText required class="form-control" @bind-Value="clientes.Nombre" placeholder="Nombre y Apellido"></InputText>
                    </div>
                    <div class="col">
                        <label><strong>DOC. Identidad *</strong></label>
                        <InputText required class="form-control" @bind-Value="clientes.Cedula" placeholder="000-0000000-0"></InputText>
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col">
                        <label><strong>Dirección *</strong></label>
                        <InputText required class="form-control" @bind-Value="clientes.Direccion" placeholder="Av. Duarte #10"></InputText>
                    </div>
                    <div class="col">
                        <label><strong>Fecha de Regístro *</strong></label>
                        <InputDate required class="form-control" @bind-Value="clientes.FechaIngreso"></InputDate>
                    </div>
                </div>

                <div class="section-title">Datos de contacto</div>

                <div class="row mb-3">
                    <div class="col">
                        <label><strong>Teléfono *</strong></label>
                        <InputText required class="form-control" @bind-Value="clientes.Telefono" placeholder="(555) 555-555"></InputText>
                    </div>

                    <div class="col">
                        <label><strong>Correo Electrónico *</strong></label>
                        <InputText required type="email" class="form-control" @bind-Value="clientes.Email" placeholder="email@ejemplo.com"></InputText>
                    </div>
                </div>
                <div class="text-center">
                    <button type="submit" class="btn btn-success bi bi-floppy">   Guardar</button>
                    <a href="/Clientes/Index" class="btn btn-secondary bi bi-arrow-left-circle">   Volver</a>
                </div>
            </EditForm>
        </div>
    </div>
</div>

<style>
    body {
    background-color: #f5f5f5;
    }

    .contenedor {
    max-width: 800px;
    margin: auto;
    padding: 10px;
    }

    .card {
    background: white;
    padding: 20px;
    border-radius: 10px;
    }

    .section-title {
    background: #0d5c63;
    color: white;
    text-align: center;
    font-weight: bold;
    padding: 8px;
    margin: 10px;
    border-radius: 5px;
    }

    .btn-success {
        background-color: #0d5c63;
        border: none;
        margin: 10px;
        padding: 10px 20px;
    }

    .btn-secondary {
        background-color: #444;
        color: white;
        text-decoration: none;
        margin: 10px;
        padding: 10px 20px;
    }

    .btn-secondary:hover {
    background-color: #222;
    }
</style>

@code {
    [Parameter]
    public int ClienteId { get; set; }
    public Clientes clientes { get; set; } = new Clientes();
    [Inject] protected ToastService ToastService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        clientes = await clienteService.Buscar(ClienteId);
    }

    public Edit(ToastService toastService)
    {
        ToastService = toastService;
    }

    public async Task Guardar()
    {
     
            await clienteService.Guardar(clientes);
            ToastService.Notify(new(ToastType.Success, "Exito", $"Cliente se ha editado correctamente."));
            navigation.NavigateTo("/Clientes/Index");
        
    }

    public async Task<bool> Validar()
    {
        var existeNombre = await clienteService.BuscarNombres(clientes.Nombre);
        var existeRnc = await clienteService.BuscarRNC(clientes.Cedula);
        return existeNombre != null && existeRnc != null;
    }
}
