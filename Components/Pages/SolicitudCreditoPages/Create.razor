@page "/Solicitudes-De-Credito/Create"

@rendermode InteractiveServer

@inject SolicitudesCreditoService solicitudesCreditoService
@inject ClienteServices clientesService
@inject NavigationManager navigation

<PageTitle>Crear Solicitud de Crédito</PageTitle>
<div class="container">
	<div class="card">
		<div class="text-left">
			<h2 class="text-black" style="background-color:white;"><i class="bi bi-wallet2 m-3"></i>Nueva Solicitud de Crédito</h2>
		</div>
	</div>
</div>

<div class="contenedor">
	<div class="card">
		<div class="card-body">
			<div class="section-title mb-3">Datos de la solicitud</div>

			<EditForm Model="Solicitud" OnValidSubmit="Guardar">
				<DataAnnotationsValidator/>
				<div class="mb-3">
					<label><strong>Cliente *</strong></label>
					<div class="input-group">
						<InputSelect required class="form-select" @bind-Value="Solicitud.ClienteId">
							<option value="0" selected disabled>-- Selecciona un Cliente</option>
							@foreach (var cli in ListaClientes)
							{
								<option value="@cli.ClienteId">
									ID: @cli.ClienteId -- Nombre: @cli.Nombre
								</option>
							}
						</InputSelect>
					</div>
				</div>

				<div class="row mb-3">
					<div class="col">
						<label><strong>Garantía *</strong></label>
						<InputText required placeholder="Garantía" class="form-control" @bind-Value="Solicitud.Garantia" />
					</div>

					<div class="col">
						<label><strong>Descripción Garantía*</strong></label>
						<InputText required placeholder="Descripción" class="form-control" @bind-Value="Solicitud.DescripcionGarantia" />
					</div>
				</div>

				<div class="row mb-3">
					<div class="col">
						<label><strong>Monto Solicitado *</strong></label>
						<InputNumber required placeholder="RD$0.00" class="form-control" @bind-Value="Solicitud.MontoSolicitado" />
					</div>

					<div class="col">
						<label><strong>Sueldo Fijo*</strong></label>
						<InputNumber required placeholder="RD$0.00" class="form-control" @bind-Value="Solicitud.SueldoFijo" />
					</div>
				</div>

				<div class="text-center">
					<button class="btn btn-success bi bi-floppy">   Guardar</button>
					<a href="/Solicitudes-De-Credito/Index" class="btn btn-secondary bi bi-arrow-left-circle">   Volver</a>
				</div>
			</EditForm>
		</div>
	</div>
</div>

<style>
	body {
	background-color: #f5f5f5;
	}

	.contenedor {
	max-width: 800px;
	margin: auto;
	padding: 10px;
	}

	.card {
	background: white;
	padding: 20px;
	border-radius: 10px;
	}

	.section-title {
	background: #0d5c63;
	color: white;
	text-align: center;
	font-weight: bold;
	padding: 8px;
	margin: 10px;
	border-radius: 5px;
	}

	.btn-success {
	background-color: #0d5c63;
	border: none;
	margin: 10px;
	padding: 10px 20px;
	}

	.btn-secondary {
	background-color: #444;
	color: white;
	text-decoration: none;
	margin: 10px;
	padding: 10px 20px;
	}

	.btn-secondary:hover {
	background-color: #222;
	}
</style>

@code {
	[Inject] protected ToastService ToastService { get; set; }
	public SolicitudesCredito Solicitud { get; set; } = new();
	public Clientes Cliente { get; set; } = new Clientes();
	public List<Clientes> ListaClientes { get; set; } = new();

	protected override async Task OnInitializedAsync()
	{
		ListaClientes = await clientesService.Listar(c => true);
	}

	public async Task Guardar()
	{
		await solicitudesCreditoService.Guardar(Solicitud);
		ToastService.Notify(new(ToastType.Success, "Exito", $"Solicitud de credito registrada correctamente."));
		navigation.NavigateTo("/Solicitudes-de-Credito/Index");
	}
}
