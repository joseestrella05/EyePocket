@page "/Agente/Index"
@inject AgenteServices agenteServices
@inject ToastService toastService

@rendermode InteractiveServer

<PageTitle>Gestión de Agentes</PageTitle>
<div class="row" style="background-color:white; padding:10px; margin:10px;">
	<div class="col">
		<div class="text-left">
			<h2 class="text-black"><i class="bi bi-person-badge m-1"></i> Gestión de Agentes</h2>
		</div>
	</div>
	<div class="col">
		<a href="/Agente/Create" class="btn btn-secondary">Crear nuevo agente</a>
	</div>
</div>

<div class="container">
	<div class="card">
		<div class="card-body">
			<div class="row">
				<div class="col-4">
					<div class="input-group" style="width: 250px">
						<div class="form-floating">
							<InputSelect class="form-select" id="floatingSelect" aria-label="Filtro" @bind-Value="@valorFiltro">
								<option value="" selected disabled>--- Selecciona ---</option>
								<option value="idagente">ID Agente</option>
								<option value="nombre">Nombre</option>
								<option value="email">Email</option>
								<option value="telefono">Teléfono</option>
							</InputSelect>
							<label for="floatingSelect"><strong>Filtrar por...</strong></label>
						</div>
						<button type="button" class="btn btn-secondary bi bi-arrow-counterclockwise" @onclick="Restablecer"></button>
					</div>
				</div>

				<div class="col">
					<div class="input-group" style="width: 500px">
						<div class="form-floating d-flex align-items-center">
							<InputText @bind-Value="@searchBarValue" class="form-control" placeholder="" id="floatingSearch" />
							<label for="floatingSearch">Buscar</label>
						</div>
						<button @onclick="Buscar" class="btn btn-secondary bi bi-search" type="button"></button>
					</div>
				</div>
			</div>

			<br />

			<table class="table table-light table-hover">
				<thead class="table table-striped">
				<tr class="text-center">
					<th>ID</th>
					<th>Nombre</th>
					<th>Salario</th>
					<th>Teléfono</th>
					<th>Acciones</th>
				</tr>
				</thead>
				<tbody>
				@foreach (var agente in ListaAgentes)
				{
					<tr class="text-center">
						<td>@agente.AgenteId</td>
						<td>@agente.Nombre</td>
						<td>@agente.Salario</td>
						<td>@agente.N_Telefono</td>
						<td>
							<a href="/Agente/Edit/@agente.AgenteId" class="btn btn-outline-info bi bi-pencil-square"></a>
							<button type="button" @onclick="() => Eliminar(agente.AgenteId)" class="btn btn-outline-danger bi bi-trash"></button>
						</td>
					</tr>
				}
				</tbody>
				<caption>Cant. de agentes: @ListaAgentes.Count</caption>
			</table>
		</div>
	</div>
</div>


@code {
	public string searchBarValue { get; set; } = string.Empty;
	public string valorFiltro { get; set; } = string.Empty;
	public List<Agentes> ListaAgentes { get; set; } = new List<Agentes>();
	private bool mostrarModal = false;
	private int AgenteIdSelecc { get; set; }

	protected override async Task OnInitializedAsync()
	{
		ListaAgentes = await agenteServices.Listar(a => true);
	}


	public async Task Buscar()
	{
		if (string.IsNullOrEmpty(valorFiltro))
		{
			toastService.Notify(new(ToastType.Warning, "Aviso", "Debe seleccionar una opción en el filtro."));
			ListaAgentes = await agenteServices.Listar(a => true);
			return;
		}

		searchBarValue = searchBarValue.Trim().ToLower();

		switch (valorFiltro)
		{
			case "idagente":
				if (int.TryParse(searchBarValue, out int id))
					ListaAgentes = await agenteServices.Listar(a => a.AgenteId == id);
				break;
			case "nombre":
				ListaAgentes = await agenteServices.Listar(a => a.Nombre.ToLower().Contains(searchBarValue));
				break;
			
			case "telefono":
				ListaAgentes = await agenteServices.Listar(a => a.N_Telefono.Contains(searchBarValue));
				break;
			default:
				ListaAgentes = await agenteServices.Listar(a => true);
				break;
		}
	}
	
	public async Task Eliminar(int agenteId)
	{
			await agenteServices.Eliminar(agenteId);
			ListaAgentes = await agenteServices.Listar(a => true);
	}

	public async Task Restablecer()
	{
		ListaAgentes = await agenteServices.Listar(a => true);
		searchBarValue = string.Empty;
		valorFiltro = string.Empty;
		toastService.Notify(new(ToastType.Info, "Aviso", "Se han restablecido los criterios de búsqueda."));
	}
	
	private void MostrarModal()
	{
		
		mostrarModal = true;
	}

	private void CerrarModal()
	{
		mostrarModal = false;
	}
}

