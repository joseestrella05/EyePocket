@page "/TarjetaPunto/Create"
@inject T_PuntosServices tarjetaPuntoService
@inject NavigationManager navigation

<PageTitle>Creando Tarjeta Punto</PageTitle>
<div class="text-left">
    <h2 class="text-black" style="background-color:white; padding:5px;"><i class="bi bi-credit-card-plus m-1"></i>Nuevo Tarjeta Punto</h2>
</div>

<EditForm Model="tarjetaPunto" OnValidSubmit="Guardar">
    <div class="container">
        <div class="card">
            <div class="card-body">
                <div class="section-title">Datos de la Tarjeta de Puntos</div>

                <div class="row">
                    <div class="col">
                        <label>Fecha de Creación *</label>
                        <InputDate class="form-control" @bind-Value="tarjetaPunto.FechaCreacion" readonly/>
                    </div>
                </div>

                <div class="row">
                    <div class="col">
                        <label>Tarjeta ID *</label>
                        <InputNumber class="form-control" @bind-Value="tarjetaPunto.TarjetaId" readonly/>
                    </div>
                    <div class="col">
                        <label>Puntos Acumulados *</label>
                        <InputNumber class="form-control" @bind-Value="tarjetaPunto.Puntos" placeholder="Ingrese los puntos acumulados"></InputNumber>
                    </div>
                </div>

            </div>

        </div>
        <div class="text-center">
            <button type="submit" class="btn btn-success">Guardar</button>
            <a href="/TarjetaPunto/Index" class="btn btn-secondary">Volver</a>
        </div>
    </div>
</EditForm>

<style>
    body{
        background-color:#f5f5f5;
    }
    .container {
        max-width: 800px;
        margin: auto;
        padding: 10px;
    }

    .card {
        background:white;
        padding: 30px;
        border-radius: 10px;
    }

    .section-title {
        background: #0d5c63;
        color: white;
        text-align: center;
        font-weight: bold;
        padding: 8px;
        margin: 10px;
        border-radius: 5px;
    }

    .btn {
        margin: 10px;
        padding: 10px 20px;
        border-radius: 5px;
    }

    .btn-success {
        background-color: #0d5c63;
        border: none;
    }

    .btn-secondary {
        background-color: #444;
        color: white;
        text-decoration: none;
    }

    .btn-secondary:hover {
        background-color: #222;
    }
</style>

@code {
    public TarjetaPuntos tarjetaPunto { get; set; } = new TarjetaPuntos();
    [Inject] protected ToastService ToastService { get; set; }

    public async Task Guardar()
    {
        if (!await Validar())
        {
            await tarjetaPuntoService.Guardar(tarjetaPunto);
            ToastService.Notify(new(ToastType.Success, "Éxito", $"Tarjeta Punto creada correctamente."));
            tarjetaPunto = new TarjetaPuntos();
            navigation.NavigateTo("/TarjetaPunto/Index");
        }
        else
        {
            ToastService.Notify(new(ToastType.Danger, "Error", $"Tarjeta ya existe."));
        }
    }

    public async Task<bool> Validar()
    {
        var existeNumeroTarjeta = await tarjetaPuntoService.Buscar(tarjetaPunto.TarjetaId);
        return existeNumeroTarjeta != null;
    }
}
