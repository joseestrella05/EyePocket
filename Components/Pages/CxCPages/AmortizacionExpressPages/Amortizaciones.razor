@page "/Amortizaciones"

@rendermode InteractiveServer

@inject ClienteServices clientesService
@inject CuentasXCobrarService cxcService
@inject CuotasCXCService cuotasService
@inject OrdenVentaService ordenVentasService

<PageTitle>Amortizaciones</PageTitle>
<div class="container mb-4">
    <div class="card">
        <div class="row" style="background-color:white; padding:10px; margin:10px;">
            <div class="col">
                <div class="text-left">
                    <h2 class="text-black"><i class="bi bi-cash-stack"></i> Amortización de las Cuotas</h2>
                </div>
            </div>
            <div class="col text-end">
                <a href="/Cuentas-Por-Cobrar/Index" class="btn btn-success"><i class="bi bi-arrow-left-circle"></i> Volver</a>
            </div>
        </div>
    </div>
</div>

<div class="container">
    <div class="card">
        <div class="card-body">
            <div class="section-title mb-3">Seleccionar amortización</div>
            <EditForm Model="CXC" OnValidSubmit="Buscar">
                <div class="row mb-3 justify-content-center align-items-center">
                    <div class="col-auto">
                        <label><strong>Cuenta x Cobrar *</strong></label>
                        <div class="input-group" style="width: 600px;">
                            <InputSelect class="form-select" @bind-Value="CXC.CXCId">
                                <option selected disabled value="0">-- Selecciona --</option>
                                @foreach (var cxc in ListaCXC)
                                {
                                    <option value="@cxc.CXCId">
                                        Nombre: @cxc.OrdenVenta.Clientes.Nombre -- Capital: RD$@((cxc.OrdenVenta.MontoTotal + cxc.OrdenVenta.MontoTotal * (cxc.Interes / 100)).ToString("N2"))
                                    </option>
                                }
                            </InputSelect>
                            <button type="submit" class="btn btn-success bi bi-search"> Ver cuotas</button>
                            <button type="button" @onclick="Restablecer" class="btn btn-success bi bi-arrow-clockwise"> Restablecer</button>
                        </div>
                    </div>
                </div>

            </EditForm>
            <table class="table table-sm table-striped table-hover">
                <thead>
                    <tr>
                        <th>No. Cuota</th>
                        <th>Estado</th>
                        <th>Cuota</th>
                        <th>Capital</th>
                        <th>Interés</th>
                        <th>Balance</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var cuota in ListaCuotas)
                    {
                        if (CXC.CXCId != cuota.CXCId)
                        {
                            continue;
                        }

                        <tr>
                            <td>@cuota.NumeroCuota</td>
                            <td>
                                @switch (cuota.EstadoId)
                                {
                                    case 1:
                                        <span class="badge text-bg-danger">Pendiente</span>
                                        break;
                                    case 2:
                                        <span class="badge btn-success">Pagado</span>
                                        break;
                                    case 3:
                                        <span class="badge text-bg-warning">Pagado Tard&iacute;o</span>
                                        break;
                                    default:
                                        <span class="badge text-bg-secondary">N/A</span>
                                        break;
                                }
                            </td>
                            <td>RD$@((cuota.PagoCapital + cuota.Interes).ToString("N2"))</td>
                            <td>RD$@cuota.PagoCapital.ToString("N2")</td>
                            <td>RD$@cuota.Interes.ToString("N2")</td>
                            @if (cuota.SaldoFinal <= 0)
                            {
                                <td>RD$0.00</td>
                            }
                            else
                            {
                                <td>RD$@cuota.SaldoFinal.ToString("N2")</td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<style>
    body {
    background-color: #f5f5f5;
    }

    .btn-success {
    background-color: #0d5c63;
    border: none;
    }

    .btn-success:hover {
    background-color: #09484e; /* ligeramente más oscuro */
    }

    .btn-success:active {
    background-color: #0d5c63; /* vuelve al color original al hacer click */
    }

    .section-title {
    background: #0d5c63;
    color: white;
    text-align: center;
    font-weight: bold;
    padding: 8px;
    margin: 10px auto;
    border-radius: 5px;
    width: 600px;
    }
</style>

@code {
    public string searchBarValue { get; set; } = string.Empty;
    public string valorFiltro { get; set; } = string.Empty;
    public DateTime? Desde { get; set; } = null;
    public DateTime? Hasta { get; set; } = null;
    public List<Clientes> ListaClientes { get; set; } = new();
    public List<CuentasXCobrar> ListaCXC { get; set; } = new();
    public List<CuotasCXC> ListaCuotas { get; set; } = new();
    public List<OrdenVenta> ListaOrdenVentas { get; set; } = new();
    public Clientes Cliente { get; set; } = new();
    public CuentasXCobrar CXC { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        ListaCXC = await cxcService.Listar(x => true);
    }

    public async Task Buscar()
    {
        if (CXC.CXCId == 0) return;
        ListaCuotas = await cuotasService.Listar(x => true);
    }

    public async Task Restablecer()
    {
        CXC.CXCId = 0;
        ListaCuotas = await cuotasService.Listar(x => false);
    }
}