@page "/Deudas/Edit/{DeudaId:int}"
@rendermode InteractiveServer
@inject ClienteServices ClientesService
@inject OrdenVentaService OrdenVentaServices
@inject DeudaService DeudaServices
@inject NavigationManager navigation

<PageTitle>Crear Deuda</PageTitle>
<div class="text-left">
    <h2 class="text-black" style="background-color:white; padding:5px;"><i class="bi bi-person-plus m-1"></i>Editar deuda</h2>
</div>

<EditForm Model="Deuda" OnValidSubmit="Crear">
    <div class="container">
        <div class="card">
            <div class="card-body">

                <div class="section-title">Modifique la informacion</div>

                <div class="row">
                    <div class="col">
                        <label class="form-label">Factura:</label>
                        <InputSelect class="form-select" @bind-Value="ClienteId" @onchange="FiltrarFacturas">
                            <option selected disabled value="0">-- Seleccione un cliente --</option>
                            @foreach (var clientes in ListClientes)
                            {
                                <option value="@clientes.ClienteId">@clientes.Nombre)</option>
                            }
                        </InputSelect>
                    </div>

                    <div class="col">
                        <label class="form-label">Factura:</label>
                        <InputSelect class="form-select" @bind-Value="Deuda.OrdenVentaId" @onchange="SeleccionarFactura">
                            <option selected disabled value="0">-- Seleccione una deuda --</option>
                            @foreach (var OrdenVenta in ListOrdenVenta)
                            {
                                <option value="@OrdenVenta.OrdenVentaId">@OrdenVenta.NumeroFactura (@OrdenVenta.Clientes?.Nombre)</option>
                            }
                        </InputSelect>
                    </div>
                    <div cla
                        <div class="col">
                            <label>Monto *</label>
                            <InputNumber class="form-control" @bind-Value="Deuda.SaldoPendiente" placeholder="000-0000000-0"></InputNumber>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col">
                            <label>Porcentaje de interes *</label>
                            <InputNumber class="form-control" @bind-Value="Deuda.Interes" placeholder="Ej. Av. Duarte #10"></InputNumber>
                        </div>
                        <div class="col">
                            <label>Capital*</label>
                            <InputNumber class="form-control" @bind-Value="Deuda.Capital" placeholder="Ej. Av. Duarte #10"></InputNumber>
                        </div>
                        <div class="col">
                            <label>Plazos*</label>
                            <InputNumber class="form-control" @bind-Value="Deuda.Periodos" placeholder="Ej. Av. Duarte #10"></InputNumber>
                        </div>
                    </div>
                </div>
                <div class="text-center">
                    <button type="submit" class="btn btn-success">Guardar</button>
                    <a href="/Deudas/Index" class="btn btn-secondary">Volver</a>
                </div>
            </div>
        </div>
    </div>

</EditForm>

<style>
    body {
    background-color: #f5f5f5;
    }

    .container {
    max-width: 800px;
    margin: auto;
    padding: 10px;
    }

    .card {
    background: white;
    padding: 20px;
    border-radius: 10px;
    }

    .section-title {
    background: #0d5c63;
    color: white;
    text-align: center;
    font-weight: bold;
    padding: 8px;
    margin: 10px;
    border-radius: 5px;
    }

    .btn-success {
    background-color: #0d5c63;
    border: none;
    margin: 10px;
    padding: 10px 20px;
    }

    .btn-secondary {
    background-color: #444;
    color: white;
    text-decoration: none;
    margin: 10px;
    padding: 10px 20px;
    }

    .btn-secondary:hover {
    background-color: #222;
    }
</style>

@code {
    [Parameter]
    public int DeudaId { get; set; }
    public int ClienteId { get; set; }
    public Deudas Deuda { get; set; } = new();
    public List<OrdenVenta> ListOrdenVenta { get; set; } = [];
    public List<Clientes> ListClientes { get; set; } = [];

    [Inject] protected ToastService ToastService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Deuda = await DeudaServices.Buscar(DeudaId);
        ListClientes = await ClientesService.Listar(o => true);
        ListOrdenVenta = await OrdenVentaServices.Listar(o => true);
    }

    public async Task Crear()
    {
        Deuda.EstadoId = 1;

        await DeudaServices.Guardar(Deuda);

        ToastService.Notify(new(ToastType.Success, "Exito", $"Deuda modificada correctamente."));
        Deuda = new();
        navigation.NavigateTo("/Deudas/Index");


    }
    private async Task FiltrarFacturas(ChangeEventArgs e)
    {
        if (int.TryParse(e.Value?.ToString(), out int clienteIdSeleccionado))
        {
            ClienteId = clienteIdSeleccionado;
            ListOrdenVenta = await OrdenVentaServices.Listar(o => o.ClienteId == ClienteId);
        }
    }
    private void SeleccionarFactura(ChangeEventArgs e)
    {
        if (int.TryParse(e.Value?.ToString(), out int facturaSeleccionada))
        {
            var factura = ListOrdenVenta.FirstOrDefault(f => f.OrdenVentaId == facturaSeleccionada);


            Deuda.SaldoPendiente = factura.MontoTotal;

            if (ClienteId == 0 && factura.Clientes != null)
            {
                ClienteId = factura.Clientes.ClienteId;
            }

        }
    }

    public async Task<bool> Validar()
    {
        return true;
    }
}
