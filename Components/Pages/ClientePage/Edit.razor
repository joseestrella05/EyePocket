@page "/Cliente/Edit/{ClienteId:int}"
@inject ClienteServices clienteService
@inject NavigationManager navigation

<div class="text-left">
    <h2 class="text-black" style="background-color:white; padding:5px;"><i class="bi bi-person-plus m-1"></i>Editar Cliente</h2>
</div>

<div class="container">
    <div class="card">
        <div class="card-body">
            <div class="text-center">
                <InputFile class="form-control" multiples/>
                <label class="form-label">Seleccionar una imagen</label>
            </div>

            <div class="section-title">Datos personales</div>

            <div class="row">
                <div class="col">
                    <label>Nombres *</label>
                    <InputText class="form-control" @bind-Value="clientes.Nombre" placeholder="Nombre del cliente"></InputText>
                </div>
                <div class="col">
                    <label>DOC. Identidad *</label>
                    <InputText class="form-control" @bind-Value="clientes.Cedula" placeholder="000-0000000-0"></InputText>
                </div>
            </div>

            <div class="row">
                <div class="col">
                    <label>Dirección *</label>
                    <InputText class="form-control" @bind-Value="clientes.Direccion" placeholder="Ej. Av. Duarte #10"></InputText>
                </div>
                <div class="col">
                    <label>Fecha Registro *</label>
                    <InputDate class="form-control" @bind-Value="clientes.FechaIngreso"></InputDate>
                </div>
            </div>

            <div class="section-title">Datos de contacto</div>

            <div class="row">
                <div class="col">
                    <label>Whatsapp *</label>
                    <InputText class="form-control" @bind-Value="clientes.Telefono" placeholder="(000) 000-0000"></InputText>
                </div>
                <div class="col">
                    <label>TEL. PRINCIPAL *</label>
                    <InputText class="form-control" @bind-Value="clientes.Telefono" placeholder="(000) 000-0000"></InputText>
                </div>
            </div>

            <div class="row">
                <div class="col">
                    <label>Correo Electrónico</label>
                    <InputText class="form-control" @bind-Value="clientes.Email" placeholder="email@gmail.com"></InputText>
                </div>
            </div>
        </div>

    </div>
    <div class="text-center">
        <button class="btn btn-success">Guardar</button>
        <a class="btn btn-secondary">Volver</a>
    </div>
</div>

<style>
    body {
    background-color: #f5f5f5;
    }

    .container {
    max-width: 800px;
    margin: auto;
    padding: 10px;
    }

    .card {
    background: white;
    padding: 30px;
    border-radius: 10px;
    }

    .section-title {
    background: #0d5c63;
    color: white;
    text-align: center;
    font-weight: bold;
    padding: 8px;
    margin: 10px;
    border-radius: 5px;
    }

    .btn {
    margin: 10px;
    padding: 10px 20px;
    border-radius: 5px;
    }

    .btn-success {
    background-color: #0d5c63;
    border: none;
    }

    .btn-secondary {
    background-color: #444;
    color: white;
    text-decoration: none;
    }

    .btn-secondary:hover {
    background-color: #222;
    }
</style>

@code {
    [Parameter]
    public int ClienteId { get; set; }
    public Clientes clientes { get; set; } = new Clientes();
    [Inject] protected ToastService ToastService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        clientes = await clienteService.Buscar(ClienteId);
    }

    public Edit(ToastService toastService)
    {
        ToastService = toastService;
    }

    public async Task Crear()
    {
        if (!await Validar())
        {
            await clienteService.Guardar(clientes);
            ToastService.Notify(new(ToastType.Success, "Exito", $"Cliente Creado correctamente."));
            clientes = new Clientes();
            navigation.NavigateTo("/Cliente/Index");
        }
        else
        {
            ToastService.Notify(new(ToastType.Danger, "Error", $"Cliente ya existe."));
        }
    }

    public void Nuevo()
    {
        clientes = new Clientes();
    }

    public async Task<bool> Validar()
    {
        var existeNombre = await clienteService.BuscarNombres(clientes.Nombre);
        var existeRnc = await clienteService.BuscarRNC(clientes.Cedula);
        return existeNombre != null && existeRnc != null;
    }
}
