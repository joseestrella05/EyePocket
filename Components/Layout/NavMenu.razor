@implements IDisposable

@inject NavigationManager NavigationManager

@*  <div class="Menu" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="navbar navbar-expand-lg navbar-light bg-light">

        @if (string.IsNullOrEmpty(NavigationManager.ToBaseRelativePath(NavigationManager.Uri)) || NavigationManager.ToBaseRelativePath(NavigationManager.Uri).TrimEnd('#', '/') == "")
        {
            <div class="brand">
                <a class="navbar-brand" href="#">EYEPOCKET</a>
            </div>
        }
        else
        {
            <div class="input-group" style="width:500px; margin-left:80px;">
                <input text" class="form-control" placeholder="Buscar" aria-label="Buscar">
                <button class="btn btn-outline-secondary" type="button" id="button-addon2">
                    <i class="bi bi-search"></i>
                </button>
            </div>
        }

        <!-- Botón de toggler para dispositivos móviles -->
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav ms-auto">
                <li class="nav-item active">
                    <a class="nav-link" href="#">Inicio</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="Cuentas-Por-Cobrar/Index">CxC</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/CxP/Index">CxP</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="/Ventas/Facturacion/Index">Ventas</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="Productos/Inventario">Inventario</a>
                </li>
                <li>
                    <a class="nav-link" href="Servicio/Index">Servicio al Cliente</a>

                </li>
            </ul>
            <button class="btn btn-success" style="background:#0d5c63;" type="button">Iniciar sesión</button>
        </div>
    </nav>
</div> *@

<MudNavMenu>
    <MudLink Href="/" Class="mud-brand">
        <img src="/Imagenes/FondoEP.png" alt="Logo eyepocket" class="logo-img" id="logo">
    </MudLink>
    <MudNavLink Href="/" Icon="@Icons.Material.Filled.SpaceDashboard" Match="NavLinkMatch.All">Home</MudNavLink>
    <MudNavGroup HideExpandIcon="false" Title="CxC" Icon="@Icons.Material.Filled.Store" Expanded="true">
        <MudNavLink Href="/Cuentas-Por-Cobrar/Index" IconColor="Color.Dark" Icon="@Icons.Material.Filled.AccountBalance" Match="NavLinkMatch.Prefix">Cuentas X Cobrar</MudNavLink>
        <MudNavLink Href="/Amortizacion-Express" IconColor="Color.Dark" Icon="@Icons.Material.Filled.Calculate" Match="NavLinkMatch.Prefix">Amortización express</MudNavLink>
        <MudNavLink Href="/Pagos/Index" IconColor="Color.Dark" Icon="@Icons.Material.Filled.Payments" Match="NavLinkMatch.Prefix">Pagos</MudNavLink>
        <MudNavLink Href="/Solicitudes-De-Credito/Index" IconColor="Color.Dark" Icon="@Icons.Material.Filled.CreditScore" Match="NavLinkMatch.Prefix">Solicitudes de crédito</MudNavLink>
    </MudNavGroup>
</MudNavMenu>
<style>
    .mud-brand {
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 1rem;
        font-size: 1.25rem;
        font-weight: bold;
        color: white;
    }

    .logo-img {
        width: 200px;
        height: 175px;
        transition: visibility 1s, opacity 1s;
    }


    .invisible-logo {
        visibility: hidden;
        opacity: 0;
    }
</style>

@code {
    private string? currentUrl;
    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}