@implements IDisposable

@inject NavigationManager NavigationManager


<div class="Menu" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="navbar navbar-expand-lg navbar-light bg-light">

        <div class="brand">
            <a class="navbar-brand" href="#">EYEPOCKET</a>
        </div>

        <!-- Botón de toggler para dispositivos móviles -->
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav ms-auto">
                <li class="nav-item active">
                    <a class="nav-link" href="#">Inicio </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="Cliente/Index">Clientes</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#">Pagos</a>
                </li>
                <li class="nav-item active">
                    <a class="nav-link" href="#">Amortizaciones</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#">Creditos</a>
                </li>
            </ul>
            <button class="btn btn-success" type="button">Iniciar sesion</button>
        </div>
    </nav>
</div>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

